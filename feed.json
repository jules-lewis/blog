{
    "version": "https://jsonfeed.org/version/1",
    "title": "OSINT and other nonsense by Jules",
    "description": "",
    "home_page_url": "https://jules-lewis.github.io/blog",
    "feed_url": "https://jules-lewis.github.io/blog/feed.json",
    "user_comment": "",
    "author": {
        "name": "Jules"
    },
    "items": [
        {
            "id": "https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html",
            "url": "https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html",
            "title": "Hotelrooms and Other Strange Places 2024: #1",
            "summary": "Returning to The Seint’s puzzling OSINT CTF for another year&hellip;",
            "content_html": "<p><em>Returning to The Seint’s puzzling OSINT CTF for another year</em></p><p>I have previously blogged about solving The Seint’s OSINT challenges <a href=\"https://jules-lewis.blogspot.com/2024/01/back-on-seints-trail-2023-osint.html\">over on Blogger</a>, but wanted to try out blogging in Markdown. So this year I will be publishing here on GitHub Pages. If I end up preferring this approach, I may start moving my old posts here too.</p><h4 id=\"how-does-the-challenge-work\">How does the challenge work?</h4>\n<p>The challenge simply involves opening a nested series of zipped files, with the password for each zip being an MD5 hash of the answer to the previous level. You can find the starting zip over at the challenge’s repo <strong><a href=\"https://github.com/seintpl/osintquiz\">here</a></strong>.</p><p>In order to get us going, The SEINT says that the password for the first zip is the MD5 hash of the word <code>start</code>. As we are going to be hashing a number of words, it is worth keeping a browser tab open with <a href=\"https://gchq.github.io/CyberChef/#recipe=MD5()&input=c3RhcnQ\">CyberChef</a> running in it. </p><pre><code>**Spoiler alert!**\n\nIf you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. \n</code></pre>\n<h4 id=\"step-1\">Step 1</h4>\n<p>Assuming you open the first zip file, you have a clue, an image, and a couple of files containing hints. Here’s the first clue:</p><blockquote>\n<p>Beep! - another email arrived. A bargain sale again, a meeting reminder or maybe this time someone wanted to write to me personally about something more interesting than lower prices, new offers or another time wasting things? I looked at the screen and noticed that the new mail stayed in the Inbox folder. That could mean only two things: either my filters were failing or the message was really meant for me to read. It was the latter this time which made me smile. And when I looked at the Sender’s name, my eyes opened even more. It was an email from my friend, who’s adventures I’ve been tracking a couple of times. My friend didn’t write normal emails, oh no, but liked riddles and non-direct stories. I couldn’t do anything else but to start reading. If you would like to read and follow this adventure with me, here’s the tale:</p><p>And so the adventure ends. We have just arrived at the airport after a long and interesting journey. I took a picture here. They say you never really appreciate the adventure until it’s over. The last flight of this journey went smoothly and lasted exactly as long as it was scheduled. I personally appreciate when the airlines go by the schedule, but this time I had to stop watching a movie I always wanted to see when we were landing, I started watching it as soon as we started the flight and hoped that it would last a few minutes longer, but this time it didn’t and I will have to find out what was the meaning of ‘Rosebud’ later. And I was so close to finding it out on the plane. But this wasn’t the only plot twist during the journey, no! There were more of them. Do you want to hear them? If so, the next story is guarded by the name of the city we were flying from. Can you tell what the name is?</p><p>The password to the next step is the MD5 hash of the abovementioned city name written in lowercase.</p></blockquote>\n<p>To my mind, we first need to find out two things:</p><ul>\n<li>what is the destination airport?</li>\n<li>what is the film referred to, and its running time?</li>\n</ul>\n<p>Then, using that information, can we work out where the flight originated?</p><p>Starting with the film, most people will hopefully know that this is a reference to one of the greatest films of all time by many accounts: <em>Citizen Kane</em>. This can be fairly easily found to have a running time of just under two hours. </p><p>How about where the flight ended? We get a fairly featureless image as a clue, which I’ve cropped below to make it even more featureless! It does have an unusual word (for an English speaker) and some fairly distinctive design elements in the signs:</p><figure class=\"post__image\"><img src=\"https://jules-lewis.github.io/blog/media/posts/1/oq24-02-airport.jpg\" alt=\"Image description\" width=\"800\" height=\"400\"  sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-lg.jpg 1024w\"></figure><p>Herrer is Danish for ‘Gentlemen’, so now we know our destination is in Denmark. </p><p>Googling <code>airport denmark gate &quot;B8&quot;</code> shows us that the airport is likely Copenhagen (for people new to Google operators, putting ‘B8’ in quotation marks means that it <em>must</em> be included in the result).</p><p>A bit of searching on Google Images reveals that the distinctive visual design does appear at that airport:</p><figure class=\"post__image\"><img loading=\"lazy\" src=\"https://jules-lewis.github.io/blog/media/posts/1/oq24-03-herrer.jpg\" alt=\"Image description\" width=\"800\" height=\"400\"  sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-lg.jpg 1024w\"></figure><p>This is quite a busy airport, but The SEINT has left us a couple more clues, in the metadata of the image. It’s unusual to find metadata in images that crop up in real investigations, because social media platforms tend to strip them. But it never hurts to check the metadata of images you find elsewhere. There are lots of tools around, but since the demise of Jeffrey Friedl’s lovely online tool, I now rely on <strong><a href=\"https://jimpl.com\">Jimpl</a></strong>. It has a pretty clean interface and had no trouble extracting the date and time The SEINT’s friend took their photo:</p><figure class=\"post__image\"><img src=\"https://jules-lewis.github.io/blog/media/posts/1/oq24-04-exif.jpg\" alt=\"Image description\" width=\"800\" height=\"400\"  sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-lg.jpg 1024w\"></figure><p>Copenhagen, like many other airports, has an arrivals checker, but unfortunately it doesn’t go back to last August. However, there’s nothing wrong with <a href=\"https://www.cph.dk/en/flight-information/arrivals?date=29%20%2F%2001%20%2F%202025&time=12\">checking an upcoming Wednesday</a>, in case schedules have stayed the same:</p><figure class=\"post__image\"><img loading=\"lazy\" src=\"https://jules-lewis.github.io/blog/media/posts/1/oq24-05-arrivals.jpg\" alt=\"Image description\" width=\"800\" height=\"400\"  sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-lg.jpg 1024w\"></figure><p>There are a couple of cities here that could fit the bill for a flight of under two hours, so in the end I had to settle for a bit of trial and error. It took a few attempts, but I eventually plugged <code>paris</code> into CyberChef and unlocked Part 2!</p>",
            "image": "https://jules-lewis.github.io/blog/media/posts/1/oq24-01-planes-2.jpg",
            "author": {
                "name": "Jules"
            },
            "tags": [
                   "OSINT",
                   "CTF"
            ],
            "date_published": "2025-01-27T23:17:35+00:00",
            "date_modified": "2025-01-28T01:02:42+00:00"
        }
    ]
}
