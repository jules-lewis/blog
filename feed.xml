<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>OSINT and other explorations</title>
    <link href="https://jules-lewis.github.io/blog/feed.xml" rel="self" />
    <link href="https://jules-lewis.github.io/blog" />
    <updated>2025-02-11T11:38:45+00:00</updated>
    <author>
        <name>Jules</name>
    </author>
    <id>https://jules-lewis.github.io/blog</id>

    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #6</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-6.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-6.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/6/oq24-28-ebird.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>
            <category term="AI"/>

        <updated>2025-02-11T10:01:27+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/6/oq24-28-ebird.jpg" alt="" />
                    With the right prompt, a chatbot can actually be useful!&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/6/oq24-28-ebird.jpg" class="type:primaryImage" alt="" /></p>
                <p><em>With the right prompt, a chatbot can actually be useful!</em></p><hr>
<p>This is a walkthrough of an OSINT CTF set by The SEINT in a GitHub repo you can find <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>. You can see how the challenge works, and how we solved Step 1 in my <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html">previous post</a>. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h4 id="step-6">Step 6</h4>
<p>We’re back to a simple text clue, and a puzzle that can be solved with some careful searching:</p><blockquote>
<p>But let’s not hang around too long in city jungles, because there is so much more to explore! The next stop seems to be a country that is known for its animals, especially a collection of unique primates. There are also five bird families unique to this country, and roaming the lands once, was a very special big bird. The latin name of this bird will give you the answer to unlock the next question. </p><p>Take this latin name, remove the spaces and convert it to lower case, and give the MD5 hash to continue.</p></blockquote>
<p>Let’s try a search engine other than Google for a change. Entering <code>country with five unique bird families</code> into DuckDuckGo, it becomes fairly apparent that Madagascar is the country referred to in the clue:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/6/oq24-26-birds.jpg" alt="Image description" width="800" height="351"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-26-birds-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-26-birds-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-26-birds-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-26-birds-lg.jpg 1024w"></figure><p>Simply searching for <code>big bird Madagascar</code> very quickly led me to the <em>Elephant Bird</em>, with the latin name kindly provided (<em>aepyornis maximus</em>):</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/6/oq24-27-elephant.jpg" alt="Image description" width="800" height="351"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-27-elephant-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-27-elephant-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-27-elephant-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-27-elephant-lg.jpg 1024w"></figure><p>But before we head off to CyberChef, could we have solved this any other way?</p><h3 id="osint-with-ai">OSINT with AI</h3>
<p>Completing the puzzle manually involved <em>understanding</em> what was important in the clue <em>The Seint</em> gave us, turning it into a usable <em>search term</em>, then looking through the results for what stood out (<em>parsing, essentially</em>). However, we now have any number of chatbots claiming to be able to process written commands semantically, and output meaningful responses. Let’s see if we needed to do any searching at all.</p><p><strong>Perplexity</strong></p><p>One of my favourite of the free tools, as it has access to search. I decided not to break the clue down, and just gave it to Perplexity ‘as is’. I included the ‘step by step’ instruction, as experience and research have shown that this can improve responses: (<a href="https://arxiv.org/abs/2201.11903">‘chain of thought’ prompting</a>)</p><pre><code>PROMPT: 
I would like you to solve the following puzzle. Think step by step:

But let&#39;s not hang around too long in city jungles, because there is so much more to explore! The next stop seems to be a country that is known for its animals, especially a collection of unique primates. There are also five bird families unique to this country, and roaming the lands once, was a very special big bird. The latin name of this bird will give you the answer to unlock the next question. 

Take this latin name, remove the spaces and convert it to lower case, and give the MD5 hash to continue.
</code></pre>
<p>I was pleasantly surprised by the output:</p><hr>
<p>To solve this puzzle, let’s break it down step by step:</p><ul>
<li><p>The country described is Madagascar. It’s known for its unique primates, especially lemurs.</p></li>
<li><p>Madagascar is home to four endemic families of birds (mesites, ground-rollers, asities, and Bernieridae ‘warblers’), plus two additional families (vangas and cuckoo-rollers) that occur only on Madagascar and the nearby Comoros Islands.</p></li>
<li><p>The “very special big bird” that once roamed Madagascar is likely referring to the extinct elephant bird, specifically the largest species, Aepyornis maximus.</p></li>
<li><p>The Latin name we need is Aepyornis maximus.</p></li>
<li><p>Removing spaces and converting to lowercase: aepyornismaximus</p></li>
<li><p>Now we need to generate the MD5 hash of “aepyornismaximus”.</p></li>
<li><p>The MD5 hash of “aepyornismaximus” is: e70970e674f5d6fd6aafd3b0607e6c62</p></li>
<li><p>This MD5 hash is the answer to unlock the next question.</p></li>
</ul>
<hr>
<p>Unfortunately, <code>e709...</code> is not the correct hash, but everything up to that point has been spot on. Large language models only predict output tokens, and can’t be expected to generate correct MD5 hashes. However, if you didn’t have access to <em>CyberChef</em>, maybe you could write some code to generate the hash. Could Perplexity help with this?</p><pre><code>PROMPT: 
The hash was incorrect. Could you generate some python code that I could run to generate the MD5 hash for &quot;aepyornismaximus&quot;?
</code></pre>
<hr>
<p>Certainly! Below is a Python code snippet that you can use to generate the MD5 hash for the string “aepyornismaximus”:</p><pre><code class="language-python">import hashlib

# The string to hash
text = &quot;aepyornismaximus&quot;

# Generate the MD5 hash
md5_hash = hashlib.md5(text.encode()).hexdigest()

# Print the result
print(&quot;MD5 Hash:&quot;, md5_hash)
</code></pre>
<hr>
<p>I pasted this code into a Google Colab, ran it, and it gave me the correct answer:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/6/oq24-29-python.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-29-python-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-29-python-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-29-python-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-29-python-lg.jpg 1024w"></figure><h3 id="chatgpt-has-entered-the-ring">ChatGPT has entered the ring!</h3>
<p>Just for kicks, I ran the above two steps in Google Gemini and Claude Sonnet, and got the same response. They correctly identified the bird, got the latin name, converted it to lower case, removed the space, then made up a hash. They then provided working Python code to generate the correct hash. Then, I tried the first prompt in ChatGPT, and noticed something unusual in the response:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/6/oq24-30-hash.jpg" alt="Image description" width="800" height="384"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-30-hash-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-30-hash-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-30-hash-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-30-hash-lg.jpg 1024w"></figure><p>This is actually the correct hash, so I wondered what would happen if I clicked on the little <code>View analysis</code> link next to the output:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/6/oq24-31-clever.jpg" alt="Image description" width="800" height="421"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-31-clever-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-31-clever-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-31-clever-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/6/responsive/oq24-31-clever-lg.jpg 1024w"></figure><p>To me, this is pretty astounding. The model reaches a point where it realises it need to <em>compute</em> a result, writes the necessary code, and executes it in its own context! I thought I had got used to the advances in AI tools, but this genuinely took me by surprise. </p><p>I am now wondering if it might be possible to have a chatbot write code that would solve the entirety of one of these CTFs??</p><p>That might be a job for another day, but in the meantime, we have what we need to open Step 7.</p><hr>
<p><em>Featured image credit: Author + Copilot, and obviously not what The Seint had in mind!</em></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #5</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-5.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-5.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/5/oq24-25-v-varen.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>

        <updated>2025-02-07T13:04:24+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/5/oq24-25-v-varen.jpg" alt="Abstract logo of V-Varen Nagasaki Football Team" />
                    A reminder of how helpful Google can be to OSINT&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/5/oq24-25-v-varen.jpg" class="type:primaryImage" alt="Abstract logo of V-Varen Nagasaki Football Team" /></p>
                <p><em>A reminder of how helpful Google can be to OSINT</em></p><hr>
<p>This is a walkthrough of an OSINT CTF set by The SEINT in a GitHub repo you can find <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>. You can see how the challenge works, and follow the walkthrough step by step <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html">here</a>. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h3 id="step-5">Step 5</h3>
<p>Today’s puzzle was solved entirely with Google. Looking back, it’s a reminder of how easy it is to become dependent on certain tools to conduct OSINT. It might be a useful exercise in future (note to self) to try and solve a CTF without any use of Google at all; who knows, it might not always be there…</p><p>Anyway, we start of with a picture clue, and some text:</p><blockquote>
<p>That was a beautiful view of Ecuador and its rainforests. But sometimes you travel through not only a forest, but a real jungle. This time it is a city jungle. Can you guess what place this is? The <strong>brown building with the car logo in the back</strong> was repainted lately and now it has a new sign on the wall. </p><p>To uncover the next step, find the writing on the bottom of the new logo sign on the building, make it lowercase and without a space, and make an MD5 hash out of it.</p></blockquote>
<p>I’ve cropped and highlighted the clue image:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/5/oq24-22-naga.jpg" alt="Image description" width="800" height="645"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22-naga-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22-naga-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22-naga-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22-naga-lg.jpg 1024w"></figure><p>The general vibe is Japanese and the writing seems to bear this out. The phone numbers on the advertising have a familiar format, so I searched for <code>japan area code 095</code>. The result showed that we are in Nagasaki.</p><p>Rather than click around, I let Google Lens have a go on the text on the brown building, which it managed to translate without any trouble, giving me <em>Mitsubishi Electric Gymnasium</em>. A quick visit to Google Maps confirmed that the building has indeed had a repaint:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/5/oq24-22a-mitsu.jpg" alt="Image description" width="800" height="441"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22a-mitsu-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22a-mitsu-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22a-mitsu-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-22a-mitsu-lg.jpg 1024w"></figure><p>Unfortunately, I couldn’t read the new logo from this image, and had to stroll around in Street View until I had the view I needed:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/5/oq24-23-sign.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-23-sign-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-23-sign-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-23-sign-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-23-sign-lg.jpg 1024w"></figure><p>And could finally zoom in:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/5/oq24-24-zoom.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-24-zoom-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-24-zoom-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-24-zoom-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/5/responsive/oq24-24-zoom-lg.jpg 1024w"></figure><p>This was just about readable enough for me to get the right hash out of CyberChef and move on to <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-6.html">Step 6</a>!</p><hr>
<p><em>Featured image credit: Tricky. Found this on <a href="https://www.peakpx.com/en/hd-wallpaper-desktop-ngeqj/download/1920x1080">peakpx.com</a>, but it has an embedded reference to besthqwallpapers.com which no longer seems to exist. I don’t know who the original artist is…</em></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #4</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-4.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-4.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/4/oq24-19-ecuador.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>

        <updated>2025-02-02T17:41:07+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/4/oq24-19-ecuador.jpg" alt="" />
                    An easier day, and a trip down the memory hole&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/4/oq24-19-ecuador.jpg" class="type:primaryImage" alt="" /></p>
                <p><em>An easier day, and a trip down the memory hole</em></p><hr>
<p>This is a walkthrough of an OSINT CTF set by The SEINT in a GitHub repo you can find <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>. You can see how the challenge works, and how we solved Step 1 in my <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html">previous post</a>. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h4 id="step-4">Step 4</h4>
<p>Sometimes, you can take the simplest route to a result. Here’s the clue for Step 4:</p><blockquote>
<p>The music was playing in the background. The kind of music that gives you energy while looking for all these places all over the world. The lyrics were in Spanish, but as I could understand some basic words, they were saying: “Let’s go on a trip to look for magical sounds”. What a wonderful phrase for our quest! Let’s look for the magical sounds in the country the song tells about. This country’s largest city’s website has a long history, as well as the telephone number for their office. The number has changed over the years, but can you find the telephone number of the municipality from 2010? </p><p>Make a hash of the number (written with pattern: XXX-XXXX, like: 123-4567) to uncover the next step.</p></blockquote>
<p>Let’s start with the song. If the lyrics were in Spanish, then “Let’s go on a trip…” must be an English translation. Thankfully, Google Translate has improved tremendously over the years, so that going from one language to another and back doesn’t (usually) result in gibberish:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/4/oq24-20-google-translate.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-20-google-translate-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-20-google-translate-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-20-google-translate-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-20-google-translate-lg.jpg 1024w"></figure><p>Now let’s try searching for those lyrics. Simply searching <code>lyrics Vamos de viaje para buscar sonidos mágicos</code> results in several links to the lyrics of <em>Ecuador</em> by German DJ Sash! I’m going to save you a click and say that it isn’t a patch on <em>Encore une fois</em>.</p><p>Googling the largest city in Ecuador leads us to <em>Guayaquil</em>, the nation’s economic capital and main port. However, it’s not the official capital city, which is <em>Quito</em>. This feels like The Seint’s way of reminding OSINT practitioners that every word in a puzzle or investigation can be important.</p><p>Now we simply Google <code>Guayaquil website</code>, which leads us to <a href="https://www.guayaquil.gob.ec/">https://www.guayaquil.gob.ec/</a>. Of course, we need to know how the site looked in 2010, so we’re off to the Wayback Machine. It’s easy to assume that everyone knows how to use <a href="https://archive.org">archive.org</a>, but just in case you need a refresher, here’s how you get to the 2010 version of this particular site.</p><h3 id="basic-use-of-the-wayback-machine">Basic Use of the Wayback Machine</h3>
<p>Navigate to <a href="https://archive.org">archive.org</a>, and enter the website you’re looking for:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/4/oq24-21-archive-1.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-1-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-1-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-1-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-1-lg.jpg 1024w"></figure><p>If there are any snapshots in the archive, they will be displayed chronologically. Here we can see that there are snapshots of Guayaquil’s official website going back to 2010:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/4/oq24-21-archive-2.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-2-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-2-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-2-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-2-lg.jpg 1024w"></figure><p>Clicking on the year we’re interested in gives us a calendar showing which days there are snapshots for. If you hover over a day, you can see a list of the snapshots that exist. In this example it’s only one, but there can be several snapshots per day:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/4/oq24-21-archive-3.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-3-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-3-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-3-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-3-lg.jpg 1024w"></figure><p>Clicking on a snapshot opens it in a frame with navigation controls so you can easily step back and forth through the archive. However, you can also remove the frame if you want to see the site more or less as it appeared at the time (bearing in mind that <a href="https://en.wikipedia.org/wiki/Link_rot">link rot</a> means that sites can’t always render images and other details).</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/4/oq24-21-archive-4.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-4-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-4-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-4-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-4-lg.jpg 1024w"></figure><p>Contact details are generally found in the footer of websites, and this was still true back in 2010…</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/4/oq24-21-archive-5.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-5-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-5-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-5-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/4/responsive/oq24-21-archive-5-lg.jpg 1024w"></figure><p>And we have our answer, so we’re off to <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-5.html">Step 5</a>!</p><hr>
<p><em>Featured image credit: <a href="https://commons.wikimedia.org/wiki/File:Guayaquila%C3%A9reo.jpg">JORGITO1983 / Wikimedia Commons</a>, <a href="https://creativecommons.org/licenses/by-sa/4.0">CC BY-SA 4.0</a></em></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #3</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-3.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-3.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/3/2013-Kai-Yun.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>

        <updated>2025-01-30T18:40:12+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/3/2013-Kai-Yun.jpg" alt="" />
                    Easily the toughest day, hope you like clicking Google Maps!&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/3/2013-Kai-Yun.jpg" class="type:primaryImage" alt="" /></p>
                <p><em>Easily the toughest day, hope you like clicking Google Maps!</em></p><hr>
<p>This is a walkthrough of an OSINT CTF set by The SEINT in a GitHub repo you can find <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>. You can see how the challenge works, and follow the walkthrough step by step <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html">here</a>. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h3 id="step-3">Step 3</h3>
<p>Today’s puzzle was pretty challenging, and underlined the need for perseverance in OSINT. Sometimes you can narrow down your solution field, but from that point on it’s an exhaustive search until you find what you’re looking for. One advantage of a CTF is that you absolutely know the perseverance will pay off; in a real investigation you can spend hours down a rabbit hole for no reward.</p><p>We start off with an image and a clue:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/3/oq24-10-scene.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-10-scene-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-10-scene-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-10-scene-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-10-scene-lg.jpg 1024w"></figure><blockquote>
<p>My friend hasn’t written since the last time we spoke about snails on the Portuguese coast. I was a little concerned, so I wrote a quick message and asked if there was some kind of new adventure going on. The reply came almost instantly, but… As always, it wasn’t a normal message. It was just a photo with some hills and woods. So again, to know where my friend was travelling, I had to do a little search. Will you help me? Along with the photo, there was also a question - “<strong>what were the words written there, just right next to the snake, in the year of that animal?</strong>”</p><p>The two words, translated to English and written in lowercase, without a space are the answer. Turn them into an MD5 hash to get to the next step.</p></blockquote>
<p>Other than the text on the flag, I had little to go on, except that we are looking at a hilly wooded scene. Google Lens has a nice tool for translating text in an image, but even that was struggling, so I gave in and read a hint:</p><blockquote>
<p>The flag position changes while the wind blows. Sometimes it blows from one direction, and sometimes it blows from the opposite side.</p></blockquote>
<p>That was a big help, and I realised that the text might be back to front…</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/3/oq24-11-scene-flip.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-11-scene-flip-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-11-scene-flip-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-11-scene-flip-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-11-scene-flip-lg.jpg 1024w"></figure><p>… and finally, I was able to make progress with Google Lens:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/3/oq24-12-nachikatsuura.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-12-nachikatsuura-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-12-nachikatsuura-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-12-nachikatsuura-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-12-nachikatsuura-lg.jpg 1024w"></figure><p>Google Maps shows that Nachikatsuura is a pretty large area (about 70 square miles), mostly hilly and wooded! However, we have the flag and a very scenic view, so presumably we are some sort of attraction, and the main attraction in the area is the Kumano Nachi Taisha shrine, a place of pilgramage for at least 800 years. It’s part of the Kumano Kodo UNESCO World Heritage Site and has an amazing waterfall, so there is no shortage of images in Street View.</p><p>This is where the zooming and clicking begins, firstly to try and establish whether the photo was taken at the shrine. Eventually, I stumble across an image that shows a flag in a very similar style to the one in the clue:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/3/oq24-13-flag.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-13-flag-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-13-flag-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-13-flag-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-13-flag-lg.jpg 1024w"></figure><p>I then find a view that confirms we must be in the same place as where the clue photo was taken:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/3/oq24-14-match.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-14-match-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-14-match-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-14-match-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-14-match-lg.jpg 1024w"></figure><p>So now I am looking for a snake, and something to do with the ‘year of the snake’, i.e. the Chinese astrological calendar. In the movie of me completing this step, we would now watch a long timelapse of me clicking around the whole temple site until I finally stumble across this chap, in a photo taken in 2012:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/3/oq24-99-2012-dragon.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-99-2012-dragon-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-99-2012-dragon-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-99-2012-dragon-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-99-2012-dragon-lg.jpg 1024w"></figure><p>The last year of the snake was in 2013, so more clicking ensued…</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/3/oq24-16-2016-rooster.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-16-2016-rooster-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-16-2016-rooster-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-16-2016-rooster-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-16-2016-rooster-lg.jpg 1024w"></figure><p>The dragon has been moved, and is now a rooster! (2016) More clicking…</p><p>Eventually, I stumble across the snake…</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/3/oq24-17-snake.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-17-snake-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-17-snake-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-17-snake-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-17-snake-lg.jpg 1024w"></figure><p>Incredibly, Google Lens was still able to translate a photo of that quality, and I finally had the words I was looking for:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/3/oq24-18-good-luck.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-18-good-luck-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-18-good-luck-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-18-good-luck-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/3/responsive/oq24-18-good-luck-lg.jpg 1024w"></figure><p>Of course, the more eagle-eyed reader will have already noticed that these two characters, 開運, appear in <strong>all</strong> the ‘year of…’ images, as they represent the traditional ‘good luck’ message for New Year!</p><p>Anyway, all CyberChef wanted was <code>goodluck</code> and I was (finally) on to <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-4.html">Step 4</a>!</p><hr>
<p><em>Featured image credit: Me and Canva…</em></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #2</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-2.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-2.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/2/oq24-09-berlenga.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>

        <updated>2025-01-28T21:53:13+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/2/oq24-09-berlenga.jpg" alt="" />
                    Slightly easier today, and time for a bit of Google-fu&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/2/oq24-09-berlenga.jpg" class="type:primaryImage" alt="" /></p>
                <p><em>Slightly easier today, and time for a bit of Google-fu</em></p><hr>
<p>This is a walkthrough of an OSINT CTF set by The SEINT in a GitHub repo you can find <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>. You can see how the challenge works, and how we solved Step 1 in my <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html">previous post</a>. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h4 id="step-2">Step 2</h4>
<p>No image on this step, just a text clue:</p><blockquote>
<p>Yes, we were coming back from Paris, but it is not the city of love that we stayed in. Our previous stop, during our journey, was a little island, which you will find, if you head southwest. This island was the witness of a British steamship being wrecked 130 years ago (the exact day of the anniversary was in September 2024, but what are a few months when you’re talking about more than a hundred years). The story ended well, but it was frightening. I wish that we could spend more of our summer days there. Did you know that a couple of years ago they found a new species of snail on that island? That’s amazing! Can you find its latin name?</p><p>The Latin name of the snail, written in lowercase, without a space (like this: <em>snailusrapidus</em>), is the answer. Turn the words into an MD5 hash to get to the next step.</p></blockquote>
<p>130 years before September 2024 was 1894. Googling <code>september 1894 british steamship wrecked</code> gets us the name of the ship, and roughly where it sank:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/2/oq24-06-search1.jpg" alt="Google search for wrecked steamship" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-06-search1-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-06-search1-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-06-search1-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-06-search1-lg.jpg 1024w"></figure><p>Googling <code>where was the dorunda wrecked?</code> leads us to the name of the island, and an image of the <em>Dorunda</em> itself:
<figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/2/oq24-07-dorunda.jpg" alt="Dorunda steamship" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-07-dorunda-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-07-dorunda-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-07-dorunda-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-07-dorunda-lg.jpg 1024w"></figure>
<em>Credit: <a href="https://commons.wikimedia.org/wiki/File:StateLibQld_1_107236_Dorunda_(ship)_docked_at_Port_Said,_Egypt.jpg">Wikimedia Commons</a></em></p><p>The image description gives us the location:</p><blockquote>
<p>2,977 GRT passenger and cargo liner Dorunda at Port Said, Egypt. Wm Denny &amp; Bros of Dumbarton, Scotland built her in 1875 for MacNeill &amp; Denny of Glasgow. Gray &amp; Dawes bought her in 1885 but sold her later that same year to British India Associated Steamers. On 27 September 1894 she was wrecked on the Berlangas near Peniche, Portugal and beached.</p></blockquote>
<p>It turns out <em>Berlangas</em> is a typo, as I found out when I Googled <code>new species of snail Berlangas</code>. This leads to a <a href="https://en.wikipedia.org/wiki/Berlengas">Wikipedia article</a> on <strong>Berlengas</strong>, which confirms that a new species of snail was discovered there in 2015. The relevant footnote links to <a href="https://natuurtijdschriften.nl/pub/644134/BAST2015079001006.pdf">a paper describing the discovery</a>, complete with an image of the snail:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/2/oq24-08-oestophora.jpg" alt="Oestophora barrelsi" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-08-oestophora-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-08-oestophora-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-08-oestophora-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/2/responsive/oq24-08-oestophora-lg.jpg 1024w"></figure><p>Plugging <code>oestophorabarrelsi</code> into CyberChef gets us on to <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-3.html">Step 3</a>!</p><hr>
<p><em>Featured image credit: <a href="https://www.oldmapsonline.org/en/Peniche,_Portugal?gid=1571b363-d6c4-4f3d-8dfa-aba06a457a69#position=8.2104/39.436/-9.783&year=1875">1875 map of Peniche via OldMapsOnline</a></em></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hotelrooms and Other Strange Places 2024: #1</title>
        <author>
            <name>Jules</name>
        </author>
        <link href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html"/>
        <id>https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024.html</id>
        <media:content url="https://jules-lewis.github.io/blog/media/posts/1/oq24-01-planes-2.jpg" medium="image" />
            <category term="OSINT"/>
            <category term="CTF"/>

        <updated>2025-01-27T23:17:35+00:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://jules-lewis.github.io/blog/media/posts/1/oq24-01-planes-2.jpg" alt="" />
                    Returning to The Seint’s puzzling OSINT CTF for another year&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://jules-lewis.github.io/blog/media/posts/1/oq24-01-planes-2.jpg" class="type:primaryImage" alt="" /></p>
                <p><em>Returning to The Seint’s puzzling OSINT CTF for another year</em></p><hr>
<p>I have previously blogged about solving The Seint’s OSINT challenges <a href="https://jules-lewis.blogspot.com/2024/01/back-on-seints-trail-2023-osint.html">over on Blogger</a>, but wanted to try out blogging in Markdown. So this year I will be publishing here on GitHub Pages. If I end up preferring this approach, I may start moving my old posts here too.</p><h4 id="how-does-the-challenge-work">How does the challenge work?</h4>
<p>The challenge simply involves opening a nested series of zipped files, with the password for each zip being an MD5 hash of the answer to the previous level. You can find the starting zip over at the challenge’s repo <strong><a href="https://github.com/seintpl/osintquiz">here</a></strong>.</p><p>In order to get us going, The SEINT says that the password for the first zip is the MD5 hash of the word <code>start</code>. As we are going to be hashing a number of words, it is worth keeping a browser tab open with <a href="https://gchq.github.io/CyberChef/#recipe=MD5()&input=c3RhcnQ">CyberChef</a> running in it. </p><pre><code>SPOILER ALERT!

If you want to have a go at solving The SEINT&#39;s puzzle yourself, please DON&#39;T read on here, as this is obviously heavily spoilered. 
</code></pre>
<h4 id="step-1">Step 1</h4>
<p>Assuming you open the first zip file, you have a clue, an image, and a couple of files containing hints. Here’s the first clue:</p><blockquote>
<p>Beep! - another email arrived. A bargain sale again, a meeting reminder or maybe this time someone wanted to write to me personally about something more interesting than lower prices, new offers or another time wasting things? I looked at the screen and noticed that the new mail stayed in the Inbox folder. That could mean only two things: either my filters were failing or the message was really meant for me to read. It was the latter this time which made me smile. And when I looked at the Sender’s name, my eyes opened even more. It was an email from my friend, who’s adventures I’ve been tracking a couple of times. My friend didn’t write normal emails, oh no, but liked riddles and non-direct stories. I couldn’t do anything else but to start reading. If you would like to read and follow this adventure with me, here’s the tale:</p><p>And so the adventure ends. We have just arrived at the airport after a long and interesting journey. I took a picture here. They say you never really appreciate the adventure until it’s over. The last flight of this journey went smoothly and lasted exactly as long as it was scheduled. I personally appreciate when the airlines go by the schedule, but this time I had to stop watching a movie I always wanted to see when we were landing, I started watching it as soon as we started the flight and hoped that it would last a few minutes longer, but this time it didn’t and I will have to find out what was the meaning of ‘Rosebud’ later. And I was so close to finding it out on the plane. But this wasn’t the only plot twist during the journey, no! There were more of them. Do you want to hear them? If so, the next story is guarded by the name of the city we were flying from. Can you tell what the name is?</p><p>The password to the next step is the MD5 hash of the abovementioned city name written in lowercase.</p></blockquote>
<p>To my mind, we first need to find out two things:</p><ul>
<li>what is the destination airport?</li>
<li>what is the film referred to, and its running time?</li>
</ul>
<p>Then, using that information, can we work out where the flight originated?</p><p>Starting with the film, most people will know that this is a reference to one of the greatest films of all time: <em>Citizen Kane</em>. This can easily be found to have a running time of just under two hours. </p><p>How about where the flight ended? We get a fairly featureless image as a clue, which I’ve cropped below to make it even more featureless! It does have an unusual word (for an English speaker) and some fairly distinctive design elements in the signs:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/1/oq24-02-airport.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-02-airport-lg.jpg 1024w"></figure><p>Herrer is Danish for ‘Gentlemen’, so now we know our destination is in Denmark. </p><p>Googling <code>airport denmark gate &quot;B8&quot;</code> shows us that the airport is likely Copenhagen (for people new to Google operators, putting ‘B8’ in quotation marks means that it <em>must</em> be included in the result).</p><p>A bit of searching on Google Images reveals that the distinctive visual design does appear at that airport:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/1/oq24-03-herrer.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-03-herrer-lg.jpg 1024w"></figure><p>This is quite a busy airport, but The SEINT has left us a couple more clues, in the metadata of the image. It’s unusual to find metadata in images that crop up in real investigations, because social media platforms tend to strip them. But it never hurts to check images you find elsewhere. There are lots of tools around, but since the demise of Jeffrey Friedl’s lovely online tool, I now rely on <strong><a href="https://jimpl.com">Jimpl</a></strong>. It has a pretty clean interface and had no trouble extracting the date and time The SEINT’s friend took their photo:</p><figure class="post__image"><img src="https://jules-lewis.github.io/blog/media/posts/1/oq24-04-exif.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-04-exif-lg.jpg 1024w"></figure><p>Copenhagen, like many other airports, has an arrivals checker, but unfortunately it doesn’t go back to last August. However, there’s nothing wrong with <a href="https://www.cph.dk/en/flight-information/arrivals?date=29%20%2F%2001%20%2F%202025&time=12">checking an upcoming Wednesday</a>, in case schedules have stayed the same:</p><figure class="post__image"><img loading="lazy" src="https://jules-lewis.github.io/blog/media/posts/1/oq24-05-arrivals.jpg" alt="Image description" width="800" height="400"  sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-xs.jpg 300w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-sm.jpg 480w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-md.jpg 768w ,https://jules-lewis.github.io/blog/media/posts/1/responsive/oq24-05-arrivals-lg.jpg 1024w"></figure><p>There are a couple of cities here that could fit the bill for a flight of under two hours, so in the end I had to settle for a bit of trial and error. It took a few attempts, but I eventually plugged <code>paris</code> into CyberChef and unlocked <a href="https://jules-lewis.github.io/blog/hotelrooms-and-other-strange-places-2024-2.html">Step 2</a>!</p>
            ]]>
        </content>
    </entry>
</feed>
